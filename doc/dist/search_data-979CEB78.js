searchData={"items":[{"type":"module","title":"cs_http_handler_api","doc":null,"ref":"cs_http_handler_api.html"},{"type":"function","title":"cs_http_handler_api.init/2","doc":"Init callback","ref":"cs_http_handler_api.html#init/2"},{"type":"function","title":"cs_http_handler_api.terminate/3","doc":"Terminate callback. This callback is strictly reserved for any required cleanup. You cannot send a response from this function. There is no other return value. If you used the process dictionary, timers, monitors or may be receiving messages, then you can use this function to clean them up, as Cowboy might reuse the process for the next keep-alive request. Note that while this function may be called in a Websocket handler, it is generally not useful to do any clean up as the process terminates immediately after calling this callback when using Websocket.","ref":"cs_http_handler_api.html#terminate/3"},{"type":"module","title":"cs_http_handler_www","doc":null,"ref":"cs_http_handler_www.html"},{"type":"function","title":"cs_http_handler_www.init/2","doc":"Init callback","ref":"cs_http_handler_www.html#init/2"},{"type":"function","title":"cs_http_handler_www.terminate/3","doc":"Terminate callback. This callback is strictly reserved for any required cleanup. You cannot send a response from this function. There is no other return value. If you used the process dictionary, timers, monitors or may be receiving messages, then you can use this function to clean them up, as Cowboy might reuse the process for the next keep-alive request. Note that while this function may be called in a Websocket handler, it is generally not useful to do any clean up as the process terminates immediately after calling this callback when using Websocket.","ref":"cs_http_handler_www.html#terminate/3"},{"type":"module","title":"cs_http_imt","doc":null,"ref":"cs_http_imt.html"},{"type":"function","title":"cs_http_imt.extension_to_type/2","doc":"Return the IMT for the specified file extension or Default if the file extension is unknown or invalid. Optimized for most used cases like html, png, jpg, js, json...","ref":"cs_http_imt.html#extension_to_type/2"},{"type":"function","title":"cs_http_imt.file_type/2","doc":"Return the IMT for the specified filename. Returns Default parameter if the IMT could not be determined.","ref":"cs_http_imt.html#file_type/2"},{"type":"function","title":"cs_http_imt.type_to_extensions/2","doc":"Return the extension for the specified IMT or Default if the IMT is unknown or invalid.","ref":"cs_http_imt.html#type_to_extensions/2"},{"type":"module","title":"cs_json","doc":null,"ref":"cs_json.html"},{"type":"function","title":"cs_json.decode/1","doc":"Decode the specified JSON binary to a map","ref":"cs_json.html#decode/1"},{"type":"function","title":"cs_json.encode/1","doc":"Convert the specfieid map to a JSON binary","ref":"cs_json.html#encode/1"},{"type":"behaviour","title":"cs_sort_behaiviour","doc":null,"ref":"cs_sort_behaiviour.html"},{"type":"callback","title":"cs_sort_behaiviour.sort/1","doc":null,"ref":"cs_sort_behaiviour.html#c:sort/1"},{"type":"module","title":"cs_sort_kahn","doc":null,"ref":"cs_sort_kahn.html"},{"type":"function","title":"cs_sort_kahn.sort/1","doc":"Sort the tasks using Kahn's Algorithm","ref":"cs_sort_kahn.html#sort/1"},{"type":"module","title":"cs_sup","doc":null,"ref":"cs_sup.html"},{"type":"function","title":"cs_sup.init/1","doc":"Returns supervisor flags and child specifications.","ref":"cs_sup.html#init/1"},{"type":"function","title":"cs_sup.start_link/0","doc":"Creates a supervisor process as part of a supervision tree.","ref":"cs_sup.html#start_link/0"},{"type":"function","title":"cs_sup.upgrade/0","doc":"Handle the upgrade process.","ref":"cs_sup.html#upgrade/0"},{"type":"module","title":"cs_tasks_job","doc":null,"ref":"cs_tasks_job.html"},{"type":"function","title":"cs_tasks_job.new_from_request/1","doc":"Create a new tasks job from the specified cowboy request I decided to preserve as much popssible of the original data format comming from Cowboy request in order to avoid performance penalties that comes from converting data around to other types.","ref":"cs_tasks_job.html#new_from_request/1"},{"type":"function","title":"cs_tasks_job.serialize_to_bash/1","doc":"Serialize sorted tasks to bash binary","ref":"cs_tasks_job.html#serialize_to_bash/1"},{"type":"function","title":"cs_tasks_job.serialize_to_map/1","doc":"Serialize sorted tasks to map","ref":"cs_tasks_job.html#serialize_to_map/1"},{"type":"module","title":"cs_utils","doc":null,"ref":"cs_utils.html"},{"type":"function","title":"cs_utils.directory_release/0","doc":"Return the configured path to the release or a path based on current module path","ref":"cs_utils.html#directory_release/0"},{"type":"function","title":"cs_utils.directory_release/1","doc":"Return the specified path added to the release directory","ref":"cs_utils.html#directory_release/1"},{"type":"function","title":"cs_utils.directory_sqlite/0","doc":"Return the configured path to the SQLite database or a path to the release db/sqlite subdirectory","ref":"cs_utils.html#directory_sqlite/0"},{"type":"function","title":"cs_utils.directory_www/0","doc":"Return the configured path to the www or a path to the release www subdirectory","ref":"cs_utils.html#directory_www/0"},{"type":"module","title":"cs_uuid","doc":null,"ref":"cs_uuid.html"},{"type":"function","title":"cs_uuid.new/0","doc":"Creates a new binary Uuid","ref":"cs_uuid.html#new/0"},{"type":"module","title":"cs_validate","doc":null,"ref":"cs_validate.html"},{"type":"function","title":"cs_validate.safe_domain_extension/1","doc":"Check domain extension Extension must contain at least one alpha numeric character. Characters are converted from upper case to lower case in the same iteration and sanitized binary is returned.","ref":"cs_validate.html#safe_domain_extension/1"},{"type":"function","title":"cs_validate.safe_http_www_path/1","doc":"Check and sanitize the specified request path. Returns the lower case path, the extension if any and the last character of the path. Those are very usefull to the caller when resolving the path. It is interesting that i couldn't find any scenario when a path using other validation rules is nedeed except in well known exploits and crappy php. With those simple rules we can quickly filter out a huge ammount of exploits scans.","ref":"cs_validate.html#safe_http_www_path/1"},{"type":"function","title":"cs_validate.safe_sub_domain_name/1","doc":"Check the specified domain name for injection So called &quot;safe domain names&quot; must contain only ASCII alpha-numeric characters, -, and one . before the alphanumeric extension. A safe domain name example: sub-domain.domain-name.extension Invalid domain names: name invalid-name -invalid-name invalid--name invalid-name. invalid..extension .invalid","ref":"cs_validate.html#safe_sub_domain_name/1"},{"type":"module","title":"cstasks_app","doc":null,"ref":"cstasks_app.html"},{"type":"function","title":"cstasks_app.start/2","doc":"application start callback","ref":"cstasks_app.html#start/2"},{"type":"function","title":"cstasks_app.stop/1","doc":"application stop callback.","ref":"cstasks_app.html#stop/1"},{"type":"extras","title":"Overview","doc":"# cstasks\n\nSolution for CraftingSoftware\n\n[![Erlang CI](https://github.com/ergenius/cstasks/actions/workflows/erlang.yml/badge.svg)](https://github.com/ergenius/cstasks/actions/workflows/erlang.yml)","ref":"readme.html"},{"type":"extras","title":"Build - Overview","doc":"The solution is using rebar3. A makefile is also provided.\nDevelopment took place using OTP 26 release on Ubuntu 22.04.\nUnofficially, you may be able to use this project with older Erlang versions. No guarantee included.\n\nOnly one command, compile, is required to fetch dependencies and compile:\n- make compile \nor\n- rebar3 compile\n\nCreate a release:\n- make release\nor\n- rebar3 release\n\nA release is already included into the repo into the /release directory.","ref":"readme.html#build"},{"type":"extras","title":"Running the solution - Overview","doc":"Change directory to the /release/cstaks/bin directory and run\n```\n$ ./cstasks console\n```\n\nTo see all the vailable comands run ./cstasks script without parameters\n```\n$ ./cstasks\nUsage: cstasks [COMMAND] [ARGS]\nCommands:\n  foreground              Start release with output to stdout\n  remote_console          Connect remote shell to running node\n  rpc [Mod [Fun [Args]]]] Run apply(Mod, Fun, Args) on running node\n  eval [Exprs]            Run expressions on running node\n  stop                    Stop the running node\n  restart                 Restart the applications but not the VM\n  reboot                  Reboot the entire VM\n  pid                     Print the PID of the OS process\n  ping                    Print pong if the node is alive\n  console                 Start the release with an interactive shell\n  console_clean           Start an interactive shell without the release's applications\n  console_boot [File]     Start an interactive shell for boot script [File]\n  daemon                  Start release in the background with run_erl (named pipes)\n  daemon_boot [File]      Start boot script [File] in the background with run_erl (named pipes)\n  daemon_attach           Connect to node started as daemon with to_erl (named pipes)\n  upgrade [Version]       Upgrade the running release to a new version\n  downgrade [Version]     Downgrade the running release to a new version\n  install [Version]       Install a release\n  uninstall [Version]     Uninstall a release\n  unpack [Version]        Unpack a release tarball\n  versions                Print versions of the release available\n  escript                 Run an escript in the same environment as the release\n  status                  Verify node is running and then run status hook scripts\n  undefined\n```","ref":"readme.html#running-the-solution"},{"type":"extras","title":"Testing the solution using the provided web frontend application - Overview","doc":"The csapplication application starts a webserver listening to localhost on port 1986 (the year Erlang was released).\nOpen http://localhost:1986/ in your browser and you will be presented with a frontend application that you can use to test the API. The web application is self explanatory. \n\nOn the left side of the screen there is a textarea where you can edit the API input parameters. You can test the default input parameters mentioned into the problem or you can paste your own JSON. To test the default simply click on the button","ref":"readme.html#testing-the-solution-using-the-provided-web-frontend-application"},{"type":"extras","title":"Web frontend test applications screenshots - Overview","doc":"Frontend application screenshot calling the JSON API. Notice the input body is in the left textarea and the response body from the API is displayed in the right textarea.\n![Frontend application screenshot calling the JSON API]()\n\nFrontend application screenshot calling the \"Bash\" API. You will be presented with a save/dowload windows. Notice the input body is in the left textarea and the response body from the API is displayed in the right textarea. \n![Frontend application screenshot calling the Bash API]()","ref":"readme.html#web-frontend-test-applications-screenshots"},{"type":"extras","title":"Manually testing the API - Overview","doc":"The following API routes are available (it is important to use the proper method POST otherwise you will receive\na 400 Bad Request for the existing API routes).","ref":"readme.html#manually-testing-the-api"},{"type":"extras","title":"Sort JSON - Overview","doc":"Request:\n- URL: http://localhost:1986/api/v1/sort/json\n- Method: POST\n- No special headers are required\n- Request body example (JSON):\n'''\n{\n\t\"tasks\": [\n\t\t{\n\t\t\t\"name\": \"task-1\",\n\t\t\t\"command\": \"touch /tmp/file1\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-2\",\n\t\t\t\"command\": \"cat /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-3\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-3\",\n\t\t\t\"command\": \"echo 'Hello World!' > /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-1\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-4\",\n\t\t\t\"command\": \"rm /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-2\",\n\t\t\t\t\"task-3\"\n\t\t\t]\n\t\t}\n\t]\n}\n'''\n\nResponse example:\n'''\n{\n  \"tasks\" : [\n    {\n      \"name\" : \"task-1\",\n      \"command\" : \"touch /tmp/file1\"\n    },\n    {\n      \"name\" : \"task-3\",\n      \"command\" : \"echo 'Hello World!' > /tmp/file1\"\n    },\n    {\n      \"name\" : \"task-2\",\n      \"command\" : \"cat /tmp/file1\"\n    },\n    {\n      \"name\" : \"task-4\",\n      \"command\" : \"rm /tmp/file1\"\n    }\n  ],\n  \"sort_time_milliseconds\" : 416\n}\n'''","ref":"readme.html#sort-json"},{"type":"extras","title":"Sort BASH - Overview","doc":"- URL: http://localhost:1986/api/v1/sort/bash\n- Method: POST\n- No special headers are required\n- Request body example (JSON):\n'''\n{\n\t\"tasks\": [\n\t\t{\n\t\t\t\"name\": \"task-1\",\n\t\t\t\"command\": \"touch /tmp/file1\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-2\",\n\t\t\t\"command\": \"cat /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-3\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-3\",\n\t\t\t\"command\": \"echo 'Hello World!' > /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-1\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"task-4\",\n\t\t\t\"command\": \"rm /tmp/file1\",\n\t\t\t\"requires\": [\n\t\t\t\t\"task-2\",\n\t\t\t\t\"task-3\"\n\t\t\t]\n\t\t}\n\t]\n}\n'''\n\nResponse example:\n'''\n{\n  \"bash\" : \"#!/usr/bin/env bash\\ntouch /tmp/file1\\necho 'Hello World!' > /tmp/file1\\ncat /tmp/file1\\nrm /tmp/file1\\n\"\n}\n'''","ref":"readme.html#sort-bash"},{"type":"extras","title":"Testing with eunit - Overview","doc":"Various eunit tests are provided in /tests/cstasks_tests.erl\n\nRun\n```\nmake test\n```\nor\n```\n./rebar3 eunit\n```","ref":"readme.html#testing-with-eunit"},{"type":"extras","title":"Dependencies - Overview","doc":"- [m_unicode](https://github.com/ergenius/m_unicode)\n- [cowboy](https://github.com/ninenines/cowboy)\n- [esqlite](https://github.com/mmzeeman/esqlite)\n- [rebar3](https://s3.amazonaws.com/rebar3/rebar3)","ref":"readme.html#dependencies"},{"type":"extras","title":"Authors - Overview","doc":"- Madalin Grigore-Enescu (ergenius) - [Github](https://github.com/ergenius) [ergenius.com]( )","ref":"readme.html#authors"},{"type":"extras","title":"License - Overview","doc":"cstasks is available under the MIT license (see `LICENSE`).","ref":"readme.html#license"},{"type":"extras","title":"License","doc":"MIT License\n\nCopyright (c) 2024 Madalin Grigore-Enescu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","ref":"license.html"}],"content_type":"text/plain","producer":{"name":"ex_doc","version":[48,46,51,50,46,50]}}